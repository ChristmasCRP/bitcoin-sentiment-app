1. Pobierz repozytorium:
Otwórz terminal i sklonuj repozytorium:

bash
Kopiuj
Edytuj
git clone https://github.com/ChristmasCRP/bitcoin-sentiment-app.git
Przejdź do folderu projektu:

bash
Kopiuj
Edytuj
cd bitcoin-sentiment-app
2. Utwórz i aktywuj wirtualne środowisko:
Windows:

bash
Kopiuj
Edytuj
python -m venv venv
.\venv\Scripts\activate
Mac/Linux:

bash
Kopiuj
Edytuj
python3 -m venv venv
source venv/bin/activate
3. Zainstaluj wymagane pakiety:
bash
Kopiuj
Edytuj
pip install -r requirements.txt
4. Skonfiguruj klucz OpenAI API:
Utwórz plik .env w katalogu głównym projektu i dodaj do niego:

ini
Kopiuj
Edytuj
OPENAI_API_KEY=twoj-klucz-api-openai
5. Uruchom backend:
Przejdź do katalogu backend:

bash
Kopiuj
Edytuj
cd backend
Uruchom backend za pomocą Uvicorn:

bash
Kopiuj
Edytuj
uvicorn main:app --reload
Backend uruchomi się na: http://127.0.0.1:8000

6. Uruchom frontend:
Otwórz nowy terminal, przejdź do katalogu frontend:

bash
Kopiuj
Edytuj
cd frontend
Otwórz plik index.html w przeglądarce lub uruchom Live Server (wtyczka VS Code) lub użyj prostego serwera:

bash
Kopiuj
Edytuj
python -m http.server
Frontend uruchomi się na: http://127.0.0.1:8000 lub na innym porcie wskazanym przez serwer.

7. Testowanie aplikacji:
/price: Pobiera aktualną cenę Bitcoina.

/history: Pobiera dane historyczne (parametry: interval, limit).

/market_cap: Pobiera kapitalizację rynkową.

/dominance: Pobiera dominację Bitcoina.

/reddit: Pobiera tytuły z Reddita.

/predict: Wysyła dane do OpenAI i zwraca analizę rynku.

8. Problemy i debugowanie:
Jeśli backend nie uruchamia się z powodu brakujących pakietów – upewnij się, że masz aktywowane wirtualne środowisko (venv).

Jeśli frontend nie pobiera danych – sprawdź w konsoli błędy CORS.

Jeśli OpenAI zwraca błąd – upewnij się, że klucz API jest poprawny i aktywny.

9. Zatrzymanie aplikacji:
W terminalu z backendem: CTRL + C

W terminalu z frontendem: CTRL + C
